<UserControl x:Class="BendingCapacity.Views.RectangularSectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BendingCapacity.Views"
			 xmlns:viewModel="clr-namespace:BendingCapacity.ViewModels"
			 xmlns:src="clr-namespace:BendingCapacity.Models"
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="825">

	<UserControl.Resources>
		<DataTemplate DataType="{x:Type ValidationError}">
			<TextBlock FontStyle="Italic" 
					   Foreground="Orange" 
					   HorizontalAlignment="Left" 
					   Margin="0,1" 
					   Text="{Binding Path=ErrorContent}"/>
		</DataTemplate>

		<ObjectDataProvider x:Key="enumValues"
							MethodName="GetValues" 
							ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="src:Reinforcement"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<src:RectangularSection x:Key="rectsect"/>
		<Style x:Key="textBoxInError" 
			   TargetType="TextBox">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" 
						 Value="true">
					<Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
								Path=(Validation.Errors)[0].ErrorContent}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

	</UserControl.Resources>
	<UserControl.Background>
		<ImageBrush/>
	</UserControl.Background>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="275"/>

			<ColumnDefinition Width="*"/>

		</Grid.ColumnDefinitions>

		<Grid.Resources>
			<Style x:Key="alternatingWithTriggers" 
				   TargetType="{x:Type ListViewItem}">
				<Setter Property="Background" 
						Value="LightGray"/>
				<Setter Property="Foreground" 
						Value="Black"/>
				<Setter Property="Opacity" 
						Value="0.90"/>
				<Style.Triggers>
					<Trigger Property="ListView.AlternationIndex" 
							 Value="1">
						<Setter Property="Background" 
								Value="Gray"/>
						<Setter Property="Foreground" 
								Value="White"/>
						<Setter Property="Opacity" 
								Value="0.90"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			
		</Grid.Resources>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="0" 
				   Margin ="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Wysokość h [mm]:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					Background="#FF2B2B2B" 
					BorderBrush="Gray"
					CaretBrush="Black" 
					SelectionBrush="Black" 
					Foreground="Gray"				
					MaxLength="5"
					x:Name="HeightTextBox" 
					Grid.Row="0" 
					Text="{Binding RectangularSection.Height, 
						UpdateSourceTrigger=PropertyChanged, 
						ValidatesOnDataErrors=True}" 
					 Width="100"/>
		</WrapPanel>
		
		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="1" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Szerokość b [mm]:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					Background="#FF2B2B2B" 
					BorderBrush="Gray"
					CaretBrush="Black" 
					SelectionBrush="Black" 
					Foreground="Gray"				
					MaxLength="5"
					x:Name="WidthTextBox" 
					Text="{Binding RectangularSection.Width, 
						UpdateSourceTrigger=PropertyChanged, 
						ValidatesOnDataErrors=True}" 
					Width="100"/>
		</WrapPanel>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="2" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Otulina [mm]:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					Background="#FF2B2B2B" 
					BorderBrush="Gray"
					CaretBrush="Black" 
					SelectionBrush="Black" 
					Foreground="Gray"				
					MaxLength="5"
					x:Name="CoverTextBox" 
					Text="{Binding RectangularSection.Cover, 
						UpdateSourceTrigger=PropertyChanged, 
						ValidatesOnDataErrors=True}" 
					Width="100"/>
		</WrapPanel>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="3" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Średnica prętów [mm]:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					Background="#FF2B2B2B" 
					BorderBrush="Gray"
					CaretBrush="Black" 
					SelectionBrush="Black" 
					Foreground="Gray"				
					MaxLength="5"
					x:Name="BarDiameterTextBox" 
					Text="{Binding RectangularSection.BarDiameter, 
						UpdateSourceTrigger=PropertyChanged, 
						ValidatesOnDataErrors=True}" 
					Width="100"/>
		</WrapPanel>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="4" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Ilość prętów:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					 Background="#FF2B2B2B" 
					 BorderBrush="Gray"
					 CaretBrush="Black" 
					 SelectionBrush="Black" 
					 Foreground="Gray"				
					 MaxLength="5"				
					 x:Name="BarCountTextBox" 
					 Text="{Binding RectangularSection.BarCount, 
						UpdateSourceTrigger=PropertyChanged,
						ValidatesOnDataErrors=True}"
					 Width="100"/>
		</WrapPanel>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="5" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Moment zginający [kNm]:</Label>
			<TextBox Style="{StaticResource textBoxInError}"
					 Background="#FF2B2B2B" 
					 BorderBrush="Gray"
					 CaretBrush="Black" 
					 SelectionBrush="Black" 
					 Foreground="Gray"				
					 MaxLength="5"
					 x:Name="BendingMomentTextBox" 
					 Text="{Binding RectangularSection.BendingMoment, 
						UpdateSourceTrigger=PropertyChanged, 
						ValidatesOnDataErrors=True}" 
					 Width="100"/>
		</WrapPanel>

		<WrapPanel Orientation="Horizontal" 
				   Grid.Row="6" 
				   Margin="5" 
				   HorizontalAlignment="Right" 
				   VerticalAlignment="Center">
			<Label Foreground="White">Zbrojenie:</Label>
			<ComboBox x:Name="ReinforcementCombobox" 
				Background="#FF2B2B2B" 
				BorderBrush="Gray"
				Foreground="Gray"				
				Width="100" 
				ItemsSource="{Binding Source={StaticResource enumValues}}"
				SelectedItem="{Binding Path=RectangularSection.tensionReinforcement, 
				Mode=TwoWay}"/>
		</WrapPanel>

		<StackPanel Grid.Column="1" 
					Grid.ColumnSpan="6" 
					Grid.Row="6" 
					Orientation="Horizontal" 
					VerticalAlignment="Center" 
					HorizontalAlignment="Left">
			<Button Background="#FF2B2B2B" 
				BorderBrush="Gray"
				Foreground="Gray"	
				Command="{Binding CalculateAndAddCommand, 
				UpdateSourceTrigger=PropertyChanged}" 
				Content="Dodaj" Width="190">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="IsEnabled" 
								Value="false" />
						<Style.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding (Validation.HasError),
										ElementName=HeightTextBox}" 
										Value="false"/>
									<Condition Binding="{Binding (Validation.HasError),
										ElementName=WidthTextBox}" 
										Value="false"/>
									<Condition Binding="{Binding (Validation.HasError), 
										ElementName=CoverTextBox}" 
										Value="false" />
									<Condition Binding="{Binding (Validation.HasError), 
										ElementName=BarDiameterTextBox}" 
										Value="false" />
									<Condition Binding="{Binding (Validation.HasError), 
										ElementName=BarCountTextBox}" 
										Value="false" />
									<Condition Binding="{Binding (Validation.HasError), 
										ElementName=BendingMomentTextBox}" 
										Value="false" />
								</MultiDataTrigger.Conditions>
								<Setter Property="IsEnabled" Value="true" />
							</MultiDataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
			
			<Button Background="#FF2B2B2B" 
				BorderBrush="Gray"
				Foreground="Gray"	
				Command="{Binding DeleteItemCommand}" 
				Content="Usuń" 
				Width="190" 
				IsEnabled="{Binding SelectedItems.Count, 
					ElementName=SectionListView}"/>
			<Button Background="#FF2B2B2B" 
				BorderBrush="Gray"
				Foreground="Gray"	
				Command="{Binding ClearListItemsCommand}" 
				Content="Usuń wszystkie" 
				Width="190"/>
		</StackPanel>
		
		<ListView x:Name="SectionListView" 
				  Margin="0,0,10,0" 
				  Grid.Column="2" 
				  Grid.RowSpan="6" 
				  AlternationCount="2" 
				  ItemContainerStyle="{StaticResource alternatingWithTriggers}" 
				  Grid.Row="0" 
				  ItemsSource="{Binding RectangularSectionList, 
					UpdateSourceTrigger=PropertyChanged}" 
				  SelectedItem="{Binding SelectedStudent}" 
				  BorderBrush="{x:Null}" 
				  Opacity="0.6">
			<ListView.Background>
				<SolidColorBrush Color="#FF232222" 
								 Opacity="0.8"/>
			</ListView.Background>

			<ListView.View>
				<GridView>
					<GridView.ColumnHeaderContainerStyle>
						<Style TargetType="{x:Type GridViewColumnHeader}">
							<Setter Property="IsEnabled" Value="False"/>
							<Setter Property="Background" Value="#FF2B2B2B"/>
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="FontSize" Value="12"/>
							<Setter Property="BorderThickness" Value="0,0,0,1"/>
							<Setter Property="BorderBrush" Value="#FF2B2B2B"/>
						</Style>
					</GridView.ColumnHeaderContainerStyle>
					<GridViewColumn Header="h [mm]" 
									Width="51" 
									DisplayMemberBinding="{Binding Height}"/>
					<GridViewColumn Header="b [mm]" 
									Width="51" 
									DisplayMemberBinding="{Binding Width}"/>
					<GridViewColumn Header="∅ [mm]" 
									Width="51" 
									DisplayMemberBinding="{Binding BarDiameter}"/>
					<GridViewColumn Header="Sztuk [-]" 
									Width="55" 
									DisplayMemberBinding="{Binding BarCount}"/>
					<GridViewColumn Header="Zbrojenie" 
									Width="65" 
									DisplayMemberBinding="{Binding tensionReinforcement}"/>
					<GridViewColumn Header="Obciążenie [kNm]" 
									Width="105" 
									DisplayMemberBinding="{Binding BendingMoment}"/>
					<GridViewColumn Header="Nośność [kNm]" 
									Width="95" 
									DisplayMemberBinding="{Binding BendingCapacity}"/>
					<GridViewColumn Header="Wytężenie [%]" 
									Width="105" 									
									DisplayMemberBinding="{Binding UsedCapacity}"/>
				</GridView>
			</ListView.View>
		</ListView>
	</Grid>
</UserControl>